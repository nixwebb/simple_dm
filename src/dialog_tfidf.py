# -*- coding: utf-8 -*-
"""dialog_tfidf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fhOWOUzV3qVvXegSmzdWKS4c-oWdk08r
"""

# Vectorize, a class that builds word vector from text
# along with an index of trigger words
# And executes queries, finding the most likely match 
# using cosine similarity

# Webb, 11/15/2022

import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
import glob


class Vectorize:

    def __init__(self,path):
        self.tv = TfidfVectorizer(min_df=0.,max_df=1.,norm='l2',use_idf=True,smooth_idf=True, stop_words='english')
        print('building index')
        self.index, self.corpus = self.build_corpus_and_index(path)
        self.matrix = self.make_matrix()

    def build_corpus_and_index(self,path):
        '''builds a corpus from a directory of txt files'''
        files = glob.glob(path+ "*.txt")
        raw_corpus = []
        for file in files:
            f = open(file)
            raw_corpus.append(f.read())
        idx = [a.split('\n')[0] for a in raw_corpus]
        corpus = [text[text.find('\n')+1:] for text in raw_corpus]
        return(idx,corpus)

    def make_matrix(self):
        '''make a TFIDF matrix from the corpus'''
        tv_matrix = self.tv.fit_transform(self.corpus)
        return(tv_matrix)

    def do_query(self,query):
        '''Given a query, use the matrix to compute COS, and return the max value'''
        query_vec = self.tv.transform([query])
        q_cos = (self.matrix * query_vec.T).toarray()

        # NEW: Maybe look at real low threshold?
        if sum(q_cos) == 0:
            return('unknown')
        else:
            return(self.index[np.argmax(q_cos)])

# For testing only
#
#v = Vectorize('/home/webbn/catkin_ws/src/simple_dm/src/state_data/')
#print('testing\n\n')

#while True:
#    text = input('Enter test string:')
#    print(v.do_query(text))


#print('how many professors are there')
#print(v.do_query('how many professors are there'))
#print()
#
#print('what is your name')
#print(v.do_query('what is your name'))
#print()
#
#print()
#print('what happens in this lab')
#print(v.do_query('hi valerie how are you and what happens in this lab'))
